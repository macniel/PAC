= PAC version 1.1 =

Diese //Javascript// Klasse dient der einfachen implementierung von [[http://www.flickr.com/|FlickR]] gestützten
Gallerien ohne dass IDs, wie etwa für Benutzer und Photosets, verwendet werden müssen.

== Installation ==

Die Installation erfolgt durch das einbinden der //gallery.js// Datei in das Projekt.

=== Abhänigkeiten ===

PAC erfordert die neuste jQuery und prettyPhoto version

=== Kompatibilitätsprobleme zu Bambus CMS ===

Sollte in der betreffenden Bambus CMS version keinen
Script abschnitt geben:
Lade die Datei gallery.js als Datei hoch und binde diese mithilfe des <script src=""> tags ein
wobei in dem src attribut der Pfad zur //gallery.js// Datei eingetragen wird.

== Verwendung ==

Sobald die gallery.js Datei eingebunden ist steht die Klasse Gallery zur verfügung.
Die Klasse wird mit hilfe des konstruktors new Gallery(galleryAdapter, apiKey, configurationArray); erzeugt.
* **galleryAdapter** : definiert die Klasse die verwendet werden soll um mit dem Bildprovider kommuniziert werden soll, PAC liefert die Klasse FlickrAdapter mit, welche die Kommunikation zwischen Gallery und FlickR ermöglicht.
* **apiKey** : definiert den Schlüssel der zur Kommunikation mit dem Bildprovider verwendet werden soll
* **configurationArray** : die Konfiguration ist von dem Adapter abhängig. FlickrAdapter bspw. erwartet ein Array mit 2 Parametern: **userName** für den Benutzernamen und **galleryName** für den GalleryNamen.

Sobald das Gallery Objekt erschaffen wurde werden mit der funktion .fetchAll() die Abfragen gestartet und die Gallerie wird dargestellt.

Ein Beispielcode ist in der Datei //seite.html// zu finden

=== Verwendung nach 1.1 ===

Es ist nun möglich, auf einem DIV Element die Funktion .gallerify auszuführen, dabei wird das standard Markup genommen
und darauf ein neues Gallery Objekt erzeugt. Die Funktion gallerify erwartet wie der Konstruktor new Gallery die gleichen parameter.

=== Verwendung nach 1.0 ===

Die Konfiguration ist nun vereinfacht worden, erfordert allerdings erneut, dass die Galerie genau wie in der Datei //seite.html// zu sehen ist
aufgebaut wird.

=== Verwendung nach 0.9 ===

Es ist nun nicht mehr nötig den gesamten Markup zu verwenden, da dieser Batzen HTML Code nun als Default Template
in der Klasse integriert ist. sollte ein anderes Template erwünscht sein so gibt es nun den Parameter **template** (Zeichenkette)
der den HTML Code als String an das GalleryTool übergibt.

es ist erforderlich die funktion run mit dem parameter der ID des Zielframes (ein DIV Element) aufzurufen.
Beispielsweise: 
{{{
gallery1.run("wrapper");
}}}
Der Rest wird von der Klasse übernommen.
=== Markup ===

Es ist wichtig, dass es folgende Elemente auf der Seite wo eine Gallery eingebunden werden soll existieren.


in diesem wird die größere Ansicht des Bildes angezeigt
{{{
<div id="__bigger__">
}}}
in diesem werden die Voransichten angezeigt
{{{
<div id="__target__">
}}}
mit diesem wird in der Gallerie //zurück// geblättert
{{{
<a id="nextBtn" onclick="__id__.slide()">
}}}
mit diesem wird in der Gallerie //vorwärts// geblättert
{{{
<a id="prevBtn" onclick="__id__.slide()">
}}}

==== Beispiel ====
Das Standard design, wie in //seite.html// zu sehen, sieht das folgende Markup vor:
{{{
<div id="bigger" style="width:500px">
    <img style="height:334px" onclick="$.prettyPhoto.open(this.getAttribute('data-biggest'),this.title,this.title);"/>
    <div/>
</div>
<a id="nextBtn" href="javascript:;" style="float:left" onclick="gallery1.slide()">Vorheriges</a> <a href="javascript:;" id="prevBtn" style="float:right" onclick="gallery1.slide()">N&auml;chstes</a>
<div id="gallery" style="display: inline-block; height: 95px; overflow-y: hidden; overflow-x: auto; width:500px; white-space:nowrap; position: relative;">
</div>
}}}

== Besonderheiten der Beispieldatei ==
Die Verwendung der //seite.html// Datei erfordert eine installation von [[http://www.no-margin-for-errors.com/projects/prettyphoto-jquery-lightbox-clone/|prettyPhoto]] sowie [[http://www.jquery.com|Query]].

